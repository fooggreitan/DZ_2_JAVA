
/* 
Задача 4 - по желанию (Режим - Герой):
Создание многопоточной программы для обработки банковских транзакций с использованием пользовательских классов исключений.

Описание задачи:
Вы разрабатываете многопоточную программу для обработки банковских транзакций. Вам необходимо реализовать класс "BankAccount", 
который представляет счет в банке и содержит баланс пользователя. Класс "BankAccount" должен поддерживать две операции: 
пополнение счета и снятие денег. Однако, у каждого счета есть ограничение по максимальному балансу, и попытка пополнения или снятия средств, 
превышающих это ограничение, должна вызывать соответствующее исключение.
Вам также необходимо реализовать класс "Bank" для управления счетами и обработки транзакций. Класс "Bank" должен содержать
методы для создания новых счетов, пополнения и снятия денег с счетов.

Для обработки ошибок исключений, вы должны создать два пользовательских класса исключений:
"InsufficientFundsException" - выбрасывается при попытке снятия средств, превышающих доступный баланс на счете.
"MaxBalanceExceededException" - выбрасывается при попытке пополнения счета, превышающего максимальное допустимое значение баланса.

Класс "Bank" должен использовать многопоточность, чтобы обрабатывать транзакции с разных счетов параллельно.
*/

package Task4;

public class Main {
    /**
     * Метод отвечает за запуск приложения
     * @param args
     */
    public static void main(String[] args){
        Bank bank = new Bank(0);
        for (int i = 0; i < 5; i++) {
            Thread thread = new Thread(bank);
            thread.start();
        }
    }
}

class InsufficientFundsException extends Exception {
    /**
     * Исключение для проверки превышающих доступного баланса на счете
     * @param message
     */
    public InsufficientFundsException(String message) {
        super(message);
    }
}

class MaxBalanceExceededException extends Exception {
   /**
    * Исключение для проверки превышающего максимальное допустимое значение баланса
     * @param message
     */
     public MaxBalanceExceededException(String message) {
        super(message);
    }
}